install.packages("ggplot2")
install.packages("prettydoc")
library(prettydoc)
unlink('Desktop/Analysing historical voting of the United Nations General Assembly/UN General Assembly_cache', recursive = TRUE)
q()
#Importing and installing required libraries
library(dplyr)
library(ggplot2)
# Loading dataset
load("~/Desktop/Analysing historical voting of the United Nations General Assembly/Dataset/UN-73new.RData")
head(completeVotes)
filteredVotes <- completeVotes %>% filter(vote %in% c("1", "2", "3"))
year_by_yearYes <- filteredVotes %>% group_by(year) %>% summarize(PercentageofYes = mean(vote == 1) * 100)
years <- c("1946", "1950", "1960", "1970", "1980", "1990", "2000", "2010", "2018")
ggplot(year_by_yearYes, aes(year, PercentageofYes, group = 1)) + geom_line() + xlim(years)
#Importing and installing required libraries
library(dplyr)
library(ggplot2)
# Loading dataset
load("~/Desktop/Analysing historical voting of the United Nations General Assembly/Dataset/UN-73new.RData")
head(completeVotes)
filteredVotes <- completeVotes %>% filter(vote %in% c("1", "2", "3"))
year_by_yearYes <- filteredVotes %>% group_by(year) %>% summarize(PercentageofYes = mean(vote == 1) * 100)
years <- c("1946", "1950", "1960", "1970", "1980", "1990", "2000", "2010", "2018")
ggplot(year_by_yearYes, aes(year, PercentageofYes, group = 1)) + geom_line() + xlim(years)
ggplot(year_by_yearYes, aes(year, PercentageofYes, group = 1))
+ geom_line() + xlim(years)
ggplot(year_by_yearYes, aes(year, PercentageofYes, group = 1)) + geom_line() + xlim(years)
filteredVotes <- completeVotes %>%
filter(vote %in% c("1", "2", "3"))
#Importing and installing required libraries
library(dplyr)
library(ggplot2)
# Loading dataset
load("~/Desktop/Analysing historical voting of the United Nations General Assembly/Dataset/UN-73new.RData")
head(completeVotes)
filteredVotes <- completeVotes %>%
filter(vote %in% c("1", "2", "3"))
year_by_yearYes <- filteredVotes %>%
group_by(year) %>%
summarize(PercentageofYes = mean(vote == 1) * 100)
years <- c("1946", "1950", "1960", "1970", "1980", "1990", "2000", "2010", "2018")
ggplot(year_by_yearYes, aes(year, PercentageofYes, group = 1)) + geom_line() + xlim(years)
byCountryYes <- filteredVotes %>%
group_by(Countryname) %>%
summarize(Votes = n(), PercentageofYes = mean(vote == 1) * 100)
head(byCountryYes %>% arrange(PercentageofYes))
head(byCountryYes %>% filter(Votes > 200) %>% arrange(desc(PercentageofYes)))
summarizedVotes <- filteredVotes %>% group_by(year, Countryname) %>% summarize(Votes = n(), PercentageofYes = mean(vote == 1) * 100)
Countries <- c("United States of America", "Norway", "India","Germany", "France", "China")
filteredCountry <- summarizedVotes %>% filter(Countryname %in% Countries)
ggplot(filteredCountry, aes(year, PercentageofYes, group = 1)) + geom_line() + xlim(years) + facet_wrap(~Countryname, scales = "free_y") + theme(axis.text.x = element_text(face="bold", size=07, angle=45))
summary(overall_model)
overall_model <- lm(percent_yes ~ year, year_by_yearYes)
summary(overall_model)
View(year_by_yearYes)
overall_model <- lm(year_by_yearYes$PercentageofYes ~ year, year_by_yearYes)
summary(overall_model)
model_india <- lm(PercentageofYes ~ year, byCountryYes %>% filter(Countryname == "India"))
View(byCountryYes)
View(summarizedVotes)
model_india <- lm(PercentageofYes ~ year, summarizedVotes %>% filter(Countryname == "India"))
summary(overall_model)
model_india <- lm(PercentageofYes ~ year, summarizedVotes %>% filter(Countryname == "India"))
ggplot(filteredCountry, aes(year, PercentageofYes, group = 1)) + geom_line() + xlim(years) + facet_wrap(~Countryname, scales = "free_y") + theme(axis.text.x = element_text(face="bold", size=07, angle=45))
View(filteredVotes)
View(completeVotes)
a <- c(1.2, 2, 3.5, 4)
b <- c(1.2, 2.2, 3.5, 4)
sum(a==b)
xvect <- c(1,2,3)
xvect
height <- c(25,18,40,45,35)
height(5)
height[length]
heighty(length(height))
install.packages("e1071")
# SVR
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
# Fitting SVR to the dataset
# install.packages('e1071')
library(e1071)
regressor = svm(formula = Salary ~ .,
data = dataset,
type = 'eps-regression',
kernel = 'radial')
# Predicting a new result
y_pred = predict(regressor, data.frame(Level = 6.5))
# Visualising the SVR results
# install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (SVR)') +
xlab('Level') +
ylab('Salary')
# CEO is an outlier
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (SVR)') +
xlab('Level') +
ylab('Salary')
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
setwd("~/Desktop/Support Vector Regression R")
setwd("~/Desktop/Support Vector Regression R")
# SVR
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
# Fitting SVR to the dataset
# install.packages('e1071')
library(e1071)
regressor = svm(formula = Salary ~ .,
data = dataset,
type = 'eps-regression',
kernel = 'radial')
# Predicting a new result
y_pred = predict(regressor, data.frame(Level = 6.5))
# Visualising the SVR results
# install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (SVR)') +
xlab('Level') +
ylab('Salary')
# CEO is an outlier
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
# Fitting SVR to the dataset
# install.packages('e1071')
library(e1071)
regressor = svm(formula = Salary ~ .,
data = dataset,
type = 'eps-regression',
kernel = 'radial')
# Predicting a new result
y_pred = predict(regressor, data.frame(Level = 6.5))
# Visualising the SVR results
# install.packages('ggplot2')
library(ggplot2)
ggplot() + geom_point(aes(x = dataset$Level, y = dataset$Salary), colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)), colour = 'blue') +
xlab('Level') + ylab('Salary')
# CEO is an outlier
